# A lot of this was stolen from:
#
# * https://github.com/zolrath/dotfiles/blob/master/tmux.conf
# * https://github.com/alanyjw/dotfiles/blob/master/home/.tmux.conf
# * https://www.reddit.com/r/tmux/comments/3paqoi/tmux_21_has_been_released/

set -g @plugin "tmux-plugins/tpm"
set -g @plugin "https://github.com/NHDaly/tmux-scroll-copy-mode"
set -g @plugin "seebi/tmux-colors-solarized"

run-shell "powerline-daemon -q"
source "/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"

set-window-option -g xterm-keys on

unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Relax!
set -sg escape-time 0
set -sg repeat-time 600

# Rebind new-window to retain current working directory
# http://unix.stackexchange.com/questions/12032/create-new-window-with-current-directory-in-tmux
bind c new-window -c "#{pane_current_path}"

# Use Vim shortcuts for splitting panes, and also return current directory
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# Start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1

# Renumber windows sequentially after closing any of them
set -g renumber-windows on

# Use Vim-like bindings for getting around and such
setw -g mode-keys vi

unbind h
unbind j
unbind k
unbind l

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize pane by 10 px in each direction
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# Make it easier to switch windows (You can also still reference windows by name)
bind C-p previous-window
bind C-n next-window

# I typically use vim in the first window, so establish a very quick way of moving there:
bind e select-window -t:1
bind C-e select-window -t:1

# Copying is just like Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Enable mouse support
set -g mouse on

# Copy when mouse is released
bind-key -t vi-copy MouseDragEnd1Pane copy-pipe "reattach-to-user-namespace pbcopy"

# Page up/down automatically enters/exits copy mode
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -t vi-copy PPage page-up
bind-key -t vi-copy NPage page-down

# Allow copy and paste with tmux, and also selenium to run properly
set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Use 256 colors, please!
# Note: This must match the same setting your terminal app is using
set -g default-terminal "screen-256color"

# Put the status bar at the bottom
set -g status-position bottom

# Turn off status updates for right now.
# For some reason, on El Capitan, notifyd keeps spawning and using a lot of CPU
# which is causing periodic lags.
# This seems to fix it for now.
# See: <https://github.com/tmux/tmux/issues/108>
set -g status-interval 0

# Activity stuff
setw -g monitor-activity on
set -g visual-activity off

# Autorename sanely
setw -g automatic-rename on

# This is necessary for the Vim tmux-focus-events plugin to work
# See <https://github.com/tmux-plugins/vim-tmux-focus-events>
set -g focus-events on

bind L source-file ~/.tmux/plugins/tmux-colors-solarized/tmuxcolors-light.conf
bind D source-file ~/.tmux/plugins/tmux-colors-solarized/tmuxcolors-dark.conf
source-file ~/.tmux/plugins/tmux-colors-solarized/tmuxcolors-dark.conf

set-window-option -g pane-active-border-style ''

# Make it easy to reload the config from within tmux
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

run-shell $HOME/.tmux/plugins/tmux-scroll-copy-mode/scroll_copy_mode.tmux
run "$HOME/.tmux/plugins/tpm/tpm"
